<?php

namespace App\Models;

use App\Enums\AirplaneStatusEnum;
use App\Helper\AirplaneHelper;
use App\Helper\CalculationHelper;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class AirlineAirplane extends Model
{
    use HasFactory;

    protected $guarded = [];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::addGlobalScope('active', function (Builder $builder) {
            $builder->where('status', 'active');
        });

/*        static::creating(function ($model) {
            $model->callsign = AirplaneHelper::callsignGenerator($model->airline,$model->airplane);
            $model->save();
        });*/
    }

    public function airline()
    {
        return $this->belongsTo(Airline::class);
    }

    public function airplane()
    {
        return $this->belongsTo(Airplane::class);
    }

    public function airport()
    {
        return $this->belongsTo(Airport::class);
    }

    public function flights()
    {
        return $this->hasMany(Flight::class,'airplane_id');
    }

    public function getTotalTraveledTime(): int
    {
        return $this->flights()->get()->sum(fn($flight) => CalculationHelper::calculateTime($flight->origin, $flight->destination));
    }

    public function getRemainedTraveledTime(): int
    {
        return  $this->airplane->lifespan - $this->getTotalTraveledTime();
    }
}
